{"version":3,"sources":["components/Jumbotron.js","components/ListItem.js","components/ResultsContainer.js","components/BookModal.js","utils/API.js","pages/Saved.js","components/Form.js","components/Container.js","pages/Search.js","pages/Error404.js","components/Navigation.js","App.js","registerServiceWorker.js","index.js"],"names":["styles","title","fontFamily","white","color","background","backgroundImage","backgroundRepeat","backgroundSize","backgroundPositionY","Jumbotron","react_default","a","createElement","style","className","infoContainer","display","row","marginBottom","button","position","top","right","fontWeight","ListItem","props","page","Button_default","onClick","handlerSaveBook","value","id","variant","handlerDeleteBook","_id","key","src","image","alt","concat","href","link","target","rel","undefined","authors","map","author","description","container","ResultsContainer","result","books","length","book","Alert_default","SearchModal","Modal_default","show","onHide","handlerCloseModal","Header","closeButton","Title","modalTitle","Body","modalBody","Footer","role","aria-label","API","getBooks","axios","get","findBooks","searchTerm","post","search","saveBook","bookData","deleteBook","delete","Saved","state","modalShow","handlerLoadBooks","then","res","_this","setState","data","catch","err","console","log","event","this","Component","spinner","width","height","marginRight","Form","loading","Spinner_default","animation","size","onSubmit","handlerFormSubmit","htmlFor","onChange","handlerInputChange","type","aria-describedby","placeholder","Container","Search","preventDefault","savedBook","find","Error404","icon","navbar","borderRight","margin","paddingRight","paddingLeft","Navigation","Navbar","sticky","bg","expand","Brand","Toggle","aria-controls","Collapse","Nav","activeKey","location","Link","App","react_router_dom","window","pathname","react_router","exact","path","component","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.eee73fb7.chunk.js","sourcesContent":["import React from 'react'\n\nconst styles = {\n    title : {\n        fontFamily: \"Arvo\",\n    },\n    white : {\n        color: \"white\"\n    },\n    background : {\n        backgroundImage: 'url(\"/book-stack.jpg\")',\n        backgroundRepeat: \"no-repeat\",\n        backgroundSize: \"cover\",\n        backgroundPositionY: \"bottom\",\n        color: \"white\"\n    }\n}\n\nexport default function Jumbotron() {\n    return (\n        <div style={styles.background} className=\"jumbotron jumbotron-fluid\">\n            <div className=\"container\">\n                <h1 style={styles.title} className=\"display-4\">gBooks</h1>\n                <p className=\"lead\">Search and save your favorite titles using the Google Books API.</p>\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport Button from \"react-bootstrap/Button\";\n\nconst styles = {\n    infoContainer : {\n        display : \"inline-block\"\n    },\n    row : {\n        marginBottom : \"2rem\"\n    },\n    button : { \n        position : \"absolute\",\n        top : 0,\n        right : 0\n    },\n    title : {\n        display: \"inline-block\",\n        fontWeight: \"bold\"\n    }\n}\n\nexport default function ListItem(props) {\n    let button;\n\n    if (props.page === \"search\") {\n        button = <Button onClick={props.handlerSaveBook} value={props.id} style={styles.button} variant=\"warning\"><i value={props.id} className=\"far fa-lg fa-save\"></i></Button>\n    } else if (props.page === \"saved\") {\n        button = <Button onClick={props.handlerDeleteBook} value={props._id} style={styles.button} variant=\"danger\"><i value={props._id} className=\"fas fa-lg fa-trash-alt\"></i></Button>\n    }; \n\n\n    return (\n        <div key={props.id} style={styles.row} className=\"row\">\n            <div className=\"col-2\">\n                <img src={props.image}  alt={`${props.title} book cover\"`} />\n            </div>\n            <div className=\"col-10\" style={styles.infoContainer}>\n                <a href={props.link} target=\"_blank\" rel=\"noopener noreferrer\"><p style={styles.title}>{props.title}</p></a>\n                { props.authors !== undefined \n                ? <p>{props.authors.map(author => {return <span><em>{author}</em>&nbsp;&nbsp;|&nbsp;&nbsp;</span>})}</p>\n                : <p>No authors provided.</p>\n                }\n                <p>{props.description}</p>\n                {button}\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport ListItem from './ListItem';\nimport Alert from \"react-bootstrap/Alert\"\n\nconst styles = {\n    container : {\n        marginBottom: \"2rem\"\n    }\n}\n\nexport default function ResultsContainer(props) {\n    \n    let result;\n\n    // Evaluates state of books array and provided appropriate component.\n    if (props.books.length) {\n        result = props.books.map(book => (<ListItem\n            key={book.id} id={book.id}\n            _id={book._id}\n            page={props.page}\n            handlerDeleteBook={props.handlerDeleteBook}\n            handlerSaveBook={props.handlerSaveBook}\n            description={book.description}\n            link={book.link} title={book.title}\n            authors={book.authors}\n            image={book.image}\n            />)\n        )\n    // If books array is empty and on the saved page.\n    } else if (props.page === \"saved\") {\n        result = <Alert variant=\"info\">No saved books.</Alert>;\n    // Else, empty <div>\n    } else {\n        result = <div></div>;\n    };\n        \n    return (\n        <div style={styles.container} className=\"container\">\n            {result}\n        </div>\n    )\n}\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\n\nexport default function SearchModal(props) {\n    return (\n        // Uses React Bootstrap (NPM)\n        <Modal show={props.show} onHide={props.handlerCloseModal}>\n            <Modal.Header closeButton>\n                <Modal.Title>{props.modalTitle}</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>{props.modalBody}</Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"primary\" onClick={props.handlerCloseModal}>\n                    <span role=\"img\" aria-label=\"thumbs up emoji\">👍</span>\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    );\n}","import axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  findBooks: function(searchTerm) {\n    return axios.post(\"/api/books/search\", { search: searchTerm });\n  },\n  // Saves a book to the database\n  saveBook: function(bookData) {\n    return axios.post(\"/api/books\", bookData);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  }\n};","import React, { Component } from 'react';\nimport Jumbotron from '../components/Jumbotron';\nimport ResultsContainer from \"../components/ResultsContainer\";\nimport BookModal from \"../components/BookModal\";\nimport API from \"../utils/API\";\n\nexport default class Saved extends Component {\n\n    state = {\n        books: [],\n        modalTitle: \"\",\n        modalBody: \"\",\n        modalShow: false,\n        page: \"saved\"\n    };\n\n    handlerLoadBooks = () => {\n        API.getBooks().then(res => this.setState({books: res.data}))\n        .catch(err => console.log(err));\n    }\n\n    // Will call GET Books API once Saved page component is loaded.\n    componentDidMount() {\n        this.handlerLoadBooks()\n    }\n\n    handlerCloseModal = () => {\n        this.setState({\n            modalShow: false\n        });\n    };\n\n    // Handles Delete API and what is shown in modal.\n    // Deletes item based on Mongo Object ID.\n    handlerDeleteBook = event => {\n        API.deleteBook(event.target.value).then(res => {\n            console.log(res);\n            this.handlerLoadBooks();\n            this.setState({\n                modalTitle: \"Deleted!\",\n                modalBody: \"Book successfully deleted.\",\n                modalShow: true\n            })\n        }).catch(err => {\n            this.setState({\n                modalTitle: \"Uh oh\",\n                modalBody: \"Sorry for the inconvenience. Please try again later.\",\n                modalShow: true\n            })\n            console.log(err);\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <Jumbotron />\n                <ResultsContainer\n                    handlerDeleteBook={this.handlerDeleteBook}\n                    page={this.state.page}\n                    books={this.state.books}\n                />\n                <BookModal\n                    handlerCloseModal={this.handlerCloseModal}\n                    modalTitle={this.state.modalTitle}\n                    modalBody={this.state.modalBody}\n                    show={this.state.modalShow}\n                />\n            </div>\n        )\n    };\n}\n","import React from 'react';\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\n\nconst styles = {\n    spinner : {\n        width: \"1.3rem\",\n        height: \"1.3rem\",\n        marginRight: \".4rem\"\n    }\n}\n\nexport default function Form(props) {\n    let button;\n\n    // If waiting for results, show a loading button.\n    // Else show search button.\n    if (props.loading) {\n        button = <Button variant=\"primary\"><Spinner style={styles.spinner} animation=\"grow\" size=\"sm\" variant=\"light\" /> Loading</Button>\n    } else {\n        button = <Button variant=\"primary\">Search</Button>\n    }; \n\n    return (\n        <form onSubmit={props.handlerFormSubmit}>\n            <div className=\"form-group\">\n                <label htmlFor=\"search\">Search</label>\n                <input value={props.searchTerm} onChange={props.handlerInputChange} type=\"text\" className=\"form-control\" id=\"search\" aria-describedby=\"searchHelp\" placeholder=\"Harry Potter\" />\n                <small id=\"searchHelp\" className=\"form-text text-muted\">Search for your favorite book title or author.</small>\n            </div>\n            {button}\n        </form>\n    )\n}\n","import React from 'react'\nimport Form from \"../components/Form\";\n\nconst styles = {\n    container : {\n        marginBottom: \"2rem\"\n    }\n}\n\nexport default function Container(props) {\n    return (\n        <div style={styles.container} className=\"container\">\n            <Form\n                loading={props.loading}\n                searchTerm={props.searchTerm}\n                handlerInputChange={props.handlerInputChange}\n                handlerFormSubmit={props.handlerFormSubmit}\n            />\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport Jumbotron from \"../components/Jumbotron\";\nimport Container from \"../components/Container\";\nimport ResultsContainer from \"../components/ResultsContainer\";\nimport BookModal from \"../components/BookModal\";\nimport API from \"../utils/API\";\n\nexport default class Search extends Component {\n\n    state = {\n        books: [],\n        searchTerm: \"\",\n        modalTitle: \"\",\n        modalBody: \"\",\n        modalShow: false,\n        loading: false,\n        page: \"search\"\n    };\n\n    handlerInputChange = event => {\n        this.setState({\n            searchTerm: event.target.value\n        });\n    };\n\n    handlerFormSubmit = event => {\n        event.preventDefault();\n        this.setState({\n            loading: true\n        });\n        API.findBooks(this.state.searchTerm).then(res => {\n            this.setState({\n                books: res.data,\n                loading: false\n            });\n        });\n    };\n\n    // Handles Post API and what is shown in modal.\n    // Searches state book array for item based on Google ID\n    handlerSaveBook = event => {\n        let savedBook = this.state.books.find(book => book.id === event.target.value);\n        API.saveBook(savedBook).then(res => {\n            this.setState({\n                modalTitle: res.data.title + \" saved.\",\n                modalBody: \"Go to the Saved page to see your saved books.\",\n                modalShow: true\n            })\n        }\n        ).catch(err => {\n            this.setState({\n                modalTitle: \"Uh oh\",\n                modalBody: \"Sorry for the inconvenience. Please try again later.\",\n                modalShow: true\n            });\n        });\n    };\n\n    handlerCloseModal = () => {\n        this.setState({\n            modalShow: false\n        });\n    };\n\n    render() {\n        return (\n            <div>\n                <Jumbotron />\n                <Container\n                    loading={this.state.loading}\n                    searchTerm={this.state.searchTerm}\n                    handlerInputChange={this.handlerInputChange}\n                    handlerFormSubmit={this.handlerFormSubmit}\n                />\n                <ResultsContainer\n                    handlerSaveBook={this.handlerSaveBook}\n                    page={this.state.page}\n                    books={this.state.books}\n                />\n                <BookModal\n                    handlerCloseModal={this.handlerCloseModal}\n                    modalTitle={this.state.modalTitle}\n                    modalBody={this.state.modalBody}\n                    show={this.state.modalShow}\n                />\n            </div>\n        )\n    }\n}\n","import React from 'react'\n\nexport default function Error404() {\n    return (\n        <div>\n            <h1>404</h1>\n        </div>\n    )\n}\n","import React from 'react';\nimport { Nav, Navbar } from \"react-bootstrap\";\n\nconst styles = {\n    icon : {\n        marginRight : \".5rem\"\n    },\n    navbar : {\n        borderRight : \"solid 1px lightgrey\",\n        margin : 0,\n        paddingRight : \"1rem\"\n    },\n    search : {\n        paddingLeft : \"1rem\"\n    }\n}\n\nexport default function Navigation(props) {\n    return (\n        // Uses React Bootstrap (NPM)\n        <Navbar sticky=\"top\" bg=\"light\" expand=\"lg\">\n            <Navbar.Brand style={styles.navbar} href=\"/\"><img style={styles.icon} src=\"/favicon.ico\" width=\"30\" height=\"30\" alt=\"gBooks Icon\"/>gBooks</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\"/>\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav activeKey={props.location} className=\"mr-auto\">\n                    <Nav.Link style={styles.search} href=\"/\">Search</Nav.Link>\n                    <Nav.Link href=\"/saved\">Saved</Nav.Link>\n                </Nav>\n            </Navbar.Collapse>\n        </Navbar>\n    )\n}","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Saved from \"./pages/Saved\";\nimport Search from \"./pages/Search\";\nimport Error404 from \"./pages/Error404\";\nimport Navigation from \"./components/Navigation\";\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <Navigation location={window.location.pathname}/>\n        <Switch>\n          <Route exact path=\"/\" component={Search} />\n          <Route exact path=\"/saved\" component={Saved} />\n          <Route component={Error404} />\n        </Switch>\n    </Router>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log(\"New content is available; please refresh.\");\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\").indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\nregisterServiceWorker();\n"],"sourceRoot":""}